FORMAT: 1A
HOST: http://notification.zazoapp.com

# Zazo Notification

## Authentication

The default mehtod is **HTTP Digest** with service's `username` and `password`.

The **HTTP Basic** works only for `development` environment (as in examples).

When *unauthorized* response will be as for [Settings](#application-settings-get).

## Group Application

### Status [GET /api/v1/status]

API status: `app_name`, `version` and `authentication_method`.
Authentication not required.

+ Request (application/json)

+ Response 200 (application/json; charset=utf-8)

        {
            "app_name": "Zazo Notification",
            "version": "0.1.0",
            "authentication_method": "basic"
        }

### Settings [GET /api/v1/settings]

+ Request Success (application/json)

    + Headers

            Authorization: Basic bm90aWZpY2F0aW9uOl05MkQ4Zlc0OTcuRjY0S3tNK3g5b1A5Sg==


+ Response 200 (application/json; charset=utf-8)

        {
            "app_name": "Zazo Notification",
            "version": "0.1.0",
            "authentication_method": "basic",
            "stub_mobile_number": false
        }

+ Request Unauthorized (application/json)

+ Response 401 (application/json; charset=utf-8')

        {
            "status": "unauthorized"
        }

## Group Notifications

### Index [GET /api/v1/notifications]

List of available notifications

+ Request (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

+ Response 200 (application/json; charset=utf-8)


        {
            "status": "success",
            "data": [
                {
                    "name": "sms",
                    "description": "SMS notification via Twilio",
                    "required_params": ["mobile_number", "body"]
                }
            ],
            "meta": {
                "total": 1
            }
        }

### Unkonwn [POST /api/v1/notifications/unknown]

+ Request (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

+ Response 404 (application/json; charset=utf-8)

        {
            "status": "not_found",
            "errors": {
                "Notification::UnknownNotification": "Notification \"unknown\" not found"
            }
        }

### SMS [POST /api/v1/notifications/sms]

Send SMS via Twilio service.

+ Parameters
    + mobile_number: +380939523746 (string) - Destination mobile number
    + body: Hello from Zazo! (string) - SMS body
    + from: +16502453537 (string, optional) - Override from number
        + Default: +16503766005


+ Request Success (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {
                "mobile_number": "+380939523746",
                "body": "Hello from Zazo!"
            }

+ Response 200 (application/json; charset=utf-8')

        {
            "status": "success",
            "original_response: {
                "sid": "SM272eb583ba9f40859abd816e97958bbf",
                "date_created": "Thu, 19 Mar 2015 22:52:19 +0000",
                "date_updated": "Thu, 19 Mar 2015 22:52:19 +0000",
                "date_sent": null,
                "account_sid": "twilio_sid",
                "to": "+380939523746",
                "from": "+16503766005",
                "body": "Zazo access code: 623030",
                "status": "queued",
                "num_segments": "1",
                "num_media": "0",
                "direction": "outbound-api",
                "api_version": "2010-04-01",
                "price": null,
                "price_unit": "USD",
                "error_code": null,
                "error_message": null,
                "uri": "/2010-04-01/Accounts/twilio_ssid/Messages/SM272eb583ba9f40859abd816e97958bbf.json",
                "subresource_uris": {
                    "media": "/2010-04-01/Accounts/twilio_ssid/Messages/SM272eb583ba9f40859abd816e97958bbf/Media.json"
                }
           }
        }

+ Request Invalid parameters (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {
                "mobile_number": "+380939523746"
            }

+ Response 422 (application/json; charset=utf-8')

        {
            "status": "invalid",
            "errors": {
                "body": [
                    "can't be blank"
                ]
            },
            "original_response": null
        }

+ Request Invalid mobile_number (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {"mobile_number":"+20227368296","body":"Hello from Zazo!"}

+ Response 400 (application/json; charset=utf-8')

        {
            "status": "failure",
            "errors": {
                "Twilio::REST::RequestError": [
                    "'To' number is not a valid mobile number"
                ]
            },
            "original_response": [
                {
                  "code": 21614,
                  "message": "'To' number is not a valid mobile number",
                  "more_info": "https://www.twilio.com/docs/errors/21614",
                  "status": 400
                }
            ]
        }

### Email [POST /api/v1/notifications/email]

Notification via Email over AWS

+ Parameters
    + to: Alex Ulianytskyi <a.ulyanitsky@gmail.com> (string) - Recipient
    + subject: Zazo Notification (string) - Recipient
    + body: Hello from Zazo! (string) - SMS body
    + from: Zazo <support@zazoapp.com> (string, optional) - Override from email
        + Default: Zazo <support@zazoapp.com>


+ Request Success (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {
                "to": "Alex Ulianytskyi <a.ulyanitsky@gmail.com>",
                "subject": "Zazo Notification",
                "body":"Hello from Zazo!"
            }

+ Response 200 (application/json; charset=utf-8')

        {
            "status": "success",
            "original_response": [
                {
                    "name": "Date",
                    "value": null,
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 9,
                    "field": {
                        "charset": "UTF-8",
                        "name": "Date",
                        "length": null,
                        "tree": null,
                        "element": null,
                        "value": "Wed, 29 Jul 2015 01:38:39 +0300"
                    }
                },
                {
                    "name": "From",
                    "value": "Sani Elfishawy <elfishawy.sani@gmail.com>",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 10,
                    "field": {
                        "charset": "UTF-8",
                        "name": "From",
                        "length": null,
                        "tree": null,
                        "element": null,
                        "value": "Sani Elfishawy <elfishawy.sani@gmail.com>",
                        "address_list": {
                            "addresses_grouped_by_group": null,
                            "address_list": {
                                "addresses": [
                                    {
                                        "raw": "Sani Elfishawy <elfishawy.sani@gmail.com>",
                                        "domain": "gmail.com",
                                        "comments": [],
                                        "local": "elfishawy.sani",
                                        "obs_domain_list": null,
                                        "display_name": "Sani Elfishawy",
                                        "group": null,
                                        "error": null
                                    }
                                ],
                                "group_names": [],
                                "error": null
                            },
                            "addresses": [
                                {
                                    "output_type": "encode",
                                    "parsed": true,
                                    "data": {
                                        "raw": "Sani Elfishawy <elfishawy.sani@gmail.com>",
                                        "domain": "gmail.com",
                                        "comments": [],
                                        "local": "elfishawy.sani",
                                        "obs_domain_list": null,
                                        "display_name": "Sani Elfishawy",
                                        "group": null,
                                        "error": null
                                    },
                                    "display_name": "Sani Elfishawy"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "To",
                    "value": "Alex Ulianytsky <a.ulyanitsky@gmail.com>",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 13,
                    "field": {
                        "charset": "UTF-8",
                        "name": "To",
                        "length": null,
                        "tree": null,
                        "element": null,
                        "value": "Alex Ulianytsky <a.ulyanitsky@gmail.com>",
                        "address_list": {
                            "addresses_grouped_by_group": null,
                            "address_list": {
                                "addresses": [
                                    {
                                        "raw": "Alex Ulianytsky <a.ulyanitsky@gmail.com>",
                                        "domain": "gmail.com",
                                        "comments": [],
                                        "local": "a.ulyanitsky",
                                        "obs_domain_list": null,
                                        "display_name": "Alex Ulianytsky",
                                        "group": null,
                                        "error": null
                                    }
                                ],
                                "group_names": [],
                                "error": null
                            },
                            "addresses": [
                                {
                                    "output_type": "encode",
                                    "parsed": true,
                                    "data": {
                                        "raw": "Alex Ulianytsky <a.ulyanitsky@gmail.com>",
                                        "domain": "gmail.com",
                                        "comments": [],
                                        "local": "a.ulyanitsky",
                                        "obs_domain_list": null,
                                        "display_name": "Alex Ulianytsky",
                                        "group": null,
                                        "error": null
                                    },
                                    "display_name": "Alex Ulianytsky"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Message-ID",
                    "value": null,
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 16,
                    "field": {
                        "charset": "UTF-8",
                        "uniq": 1,
                        "name": "Message-ID",
                        "length": null,
                        "tree": null,
                        "element": {
                            "message_ids": [
                                "55b8046f80b7f_20963fc021c541dc798f6@MacBook-Pro-Alex.local.mail"
                            ]
                        },
                        "value": "<55b8046f80b7f_20963fc021c541dc798f6@MacBook-Pro-Alex.local.mail>"
                    }
                },
                {
                    "name": "Subject",
                    "value": "Zazo Notification",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 19,
                    "field": {
                        "charset": "UTF-8",
                        "errors": [],
                        "name": "Subject",
                        "length": null,
                        "tree": null,
                        "element": null,
                        "value": "Zazo Notification"
                    }
                },
                {
                    "name": "Mime-Version",
                    "value": "1.0",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 22,
                    "field": {
                        "charset": "UTF-8",
                        "name": "Mime-Version",
                        "length": null,
                        "tree": null,
                        "element": {
                            "major": "1",
                            "minor": "0"
                        },
                        "value": "1.0"
                    }
                },
                {
                    "name": "Content-Type",
                    "value": "text\/plain",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 23,
                    "field": {
                        "charset": "UTF-8",
                        "main_type": "text",
                        "sub_type": "plain",
                        "parameters": {
                            "charset": "UTF-8"
                        },
                        "name": "Content-Type",
                        "length": null,
                        "tree": null,
                        "element": {
                            "main_type": "text",
                            "sub_type": "plain",
                            "parameters": []
                        },
                        "value": "text\/plain"
                    }
                },
                {
                    "name": "Content-Transfer-Encoding",
                    "value": "7bit",
                    "raw_value": null,
                    "charset": "UTF-8",
                    "field_order_id": 24,
                    "field": {
                        "charset": "UTF-8",
                        "name": "Content-Transfer-Encoding",
                        "length": null,
                        "tree": null,
                        "element": {
                            "encoding": "7bit"
                        },
                        "value": "7bit"
                    }
                }
            ]
        }


+ Request Invalid parameters (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {
                "subject": "Zazo Notification",
                "body":"Hello from Zazo!"
            }


+ Response 422 (application/json; charset=utf-8')

        "status": "invalid",
        "errors": {
            "to": [
                "can't be blank"
            ]
        },
        "original_response": null
        }

+ Request Invalid params (application/json)

    + Headers

            Authorization: Basic cmVub3RpZmljYXRpb246dThyZCZkNFkzTjQyOXpXMyRRKD1YOGJL

    + Body

            {
                "to": "Alex Ulianytskyi <a.ulyanitsky@gmail.com>",
                "subject": "Zazo Notification",
                "body":"Hello from Zazo!"
            }

+ Response 400 (application/json; charset=utf-8')

        {
            "status": "failure",
            "errors": {
                "Net::SMTPFatalError": [
                    "554 Message rejected: Email address is not verified.\n"
                ]
            },
            "original_response": null
        }
